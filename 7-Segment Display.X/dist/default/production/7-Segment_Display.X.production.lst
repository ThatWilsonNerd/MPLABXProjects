

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Aug 31 11:39:37 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    11  0000                     _PORTB	set	3969
    12  0000                     _PORTC	set	3970
    13  0000                     _TRISB	set	3987
    14  0000                     _TRISC	set	3988
    15                           
    16 ;;
    17 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    18 ;;
    19 ;; *************** function _main *****************
    20 ;; Defined at:
    21 ;;		line 57 in file "main.c"
    22 ;; Parameters:    Size  Location     Type
    23 ;;		None
    24 ;; Auto vars:     Size  Location     Type
    25 ;;  x               2    7[COMRAM] int 
    26 ;;  i               2    9[COMRAM] int 
    27 ;;  l               2    5[COMRAM] int 
    28 ;; Return value:  Size  Location     Type
    29 ;;		None               void
    30 ;; Registers used:
    31 ;;		wreg, status,2, status,0, cstack
    32 ;; Tracked objects:
    33 ;;		On entry : 0/0
    34 ;;		On exit  : 0/0
    35 ;;		Unchanged: 0/0
    36 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    37 ;;      Params:         0       0       0       0       0       0       0       0       0
    38 ;;      Locals:         6       0       0       0       0       0       0       0       0
    39 ;;      Temps:          1       0       0       0       0       0       0       0       0
    40 ;;      Totals:         7       0       0       0       0       0       0       0       0
    41 ;;Total ram usage:        7 bytes
    42 ;; Hardware stack levels required when called:    1
    43 ;; This function calls:
    44 ;;		_displayNum
    45 ;; This function is called by:
    46 ;;		Startup code after reset
    47 ;; This function uses a non-reentrant model
    48 ;;
    49                           
    50                           	psect	text0
    51  007EC8                     __ptext0:
    52                           	opt stack 0
    53  007EC8                     _main:
    54                           	opt stack 30
    55                           
    56                           ;main.c: 60: PORTB = 0b00111111;
    57                           
    58                           ;incstack = 0
    59  007EC8  0E3F               	movlw	63
    60  007ECA  6E81               	movwf	3969,c	;volatile
    61                           
    62                           ;main.c: 61: PORTC = 0b00000011;
    63  007ECC  0E03               	movlw	3
    64  007ECE  6E82               	movwf	3970,c	;volatile
    65                           
    66                           ;main.c: 63: int l = 0;
    67  007ED0  0E00               	movlw	0
    68  007ED2  6E07               	movwf	main@l+1,c
    69  007ED4  0E00               	movlw	0
    70  007ED6  6E06               	movwf	main@l,c
    71                           
    72                           ;main.c: 64: while(l<5)
    73  007ED8  D02E               	goto	l672
    74  007EDA                     l648:
    75                           
    76                           ;main.c: 65: {
    77                           ;main.c: 67: for(int i=0;i<=9;i++)
    78  007EDA  0E00               	movlw	0
    79  007EDC  6E0B               	movwf	main@i+1,c
    80  007EDE  0E00               	movlw	0
    81  007EE0  6E0A               	movwf	main@i,c
    82  007EE2  500B               	movf	main@i+1,w,c
    83  007EE4  0A80               	xorlw	128
    84  007EE6  0F80               	addlw	-128
    85  007EE8  0E0A               	movlw	10
    86  007EEA  B4D8               	btfsc	status,2,c
    87  007EEC  5C0A               	subwf	main@i,w,c
    88  007EEE  B0D8               	btfsc	status,0,c
    89  007EF0  D020               	goto	l670
    90                           
    91                           ;main.c: 68: {
    92                           ;main.c: 69: displayNum(i);
    93  007EF2  C00A  F001         	movff	main@i,displayNum@n
    94  007EF6  C00B  F002         	movff	main@i+1,displayNum@n+1
    95  007EFA  ECA5  F03F         	call	_displayNum	;wreg free
    96                           
    97                           ;main.c: 70: for ( int x = 0; x < 100; x++ )
    98  007EFE  0E00               	movlw	0
    99  007F00  6E09               	movwf	main@x+1,c
   100  007F02  0E00               	movlw	0
   101  007F04  6E08               	movwf	main@x,c
   102  007F06  5009               	movf	main@x+1,w,c
   103  007F08  0A80               	xorlw	128
   104  007F0A  0F80               	addlw	-128
   105  007F0C  0E64               	movlw	100
   106  007F0E  B4D8               	btfsc	status,2,c
   107  007F10  5C08               	subwf	main@x,w,c
   108  007F12  B0D8               	btfsc	status,0,c
   109  007F14  D00B               	goto	l666
   110                           
   111                           ;main.c: 71: {
   112                           ;main.c: 72: _delay((unsigned long)((10)*(48000000/4000.0)));
   113  007F16  0E9C               	movlw	156
   114  007F18  6E05               	movwf	??_main& (0+255),c
   115  007F1A  0ED7               	movlw	215
   116  007F1C                     u67:
   117  007F1C  2EE8               	decfsz	wreg,f,c
   118  007F1E  D7FE               	goto	u67
   119  007F20  2E05               	decfsz	??_main& (0+255),f,c
   120  007F22  D7FC               	goto	u67
   121  007F24  F000               	nop	
   122  007F26  4A08               	infsnz	main@x,f,c
   123  007F28  2A09               	incf	main@x+1,f,c
   124  007F2A  D7ED               	goto	L1
   125  007F2C                     l666:
   126  007F2C  4A0A               	infsnz	main@i,f,c
   127  007F2E  2A0B               	incf	main@i+1,f,c
   128  007F30  D7D8               	goto	L2
   129  007F32                     l670:
   130                           
   131                           ;main.c: 73: }
   132                           ;main.c: 74: }
   133                           ;main.c: 75: l++;
   134  007F32  4A06               	infsnz	main@l,f,c
   135  007F34  2A07               	incf	main@l+1,f,c
   136  007F36                     l672:
   137  007F36  5007               	movf	main@l+1,w,c
   138  007F38  0A80               	xorlw	128
   139  007F3A  0F80               	addlw	-128
   140  007F3C  0E05               	movlw	5
   141  007F3E  B4D8               	btfsc	status,2,c
   142  007F40  5C06               	subwf	main@l,w,c
   143  007F42  A0D8               	btfss	status,0,c
   144  007F44  D7CA               	goto	l648
   145  007F46  EF00  F010         	goto	start
   146  007F4A                     __end_of_main:
   147                           	opt stack 0
   148                           wreg	equ	0xFE8
   149                           status	equ	0xFD8
   150                           
   151                           	psect	cinit
   152  007EBE                     __pcinit:
   153                           	opt stack 0
   154  007EBE                     start_initialization:
   155                           	opt stack 0
   156  007EBE                     __initialization:
   157                           	opt stack 0
   158  007EBE                     end_of_initialization:
   159                           	opt stack 0
   160  007EBE                     __end_of__initialization:
   161                           	opt stack 0
   162  007EBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   163  007EC0  6EF8               	movwf	tblptru,c
   164  007EC2  0100               	movlb	0
   165  007EC4  EF64  F03F         	goto	_main	;jump to C main() function
   166                           tblptru	equ	0xFF8
   167                           wreg	equ	0xFE8
   168                           status	equ	0xFD8
   169                           
   170                           	psect	cstackCOMRAM
   171  000001                     __pcstackCOMRAM:
   172                           	opt stack 0
   173  000001                     displayNum@n:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177  000001                     	ds	2
   178  000003                     ??_displayNum:
   179                           
   180                           ; 0 bytes @ 0x2
   181  000003                     	ds	2
   182  000005                     ??_main:
   183                           
   184                           ; 0 bytes @ 0x4
   185  000005                     	ds	1
   186  000006                     main@l:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x5
   190  000006                     	ds	2
   191  000008                     main@x:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x7
   195  000008                     	ds	2
   196  00000A                     main@i:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x9
   200  00000A                     	ds	2
   201                           tblptru	equ	0xFF8
   202                           wreg	equ	0xFE8
   203                           status	equ	0xFD8
   204                           
   205 ;; *************** function _displayNum *****************
   206 ;; Defined at:
   207 ;;		line 4 in file "main.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;  n               2    0[COMRAM] int 
   210 ;; Auto vars:     Size  Location     Type
   211 ;;		None
   212 ;; Return value:  Size  Location     Type
   213 ;;		None               void
   214 ;; Registers used:
   215 ;;		wreg, status,2, status,0
   216 ;; Tracked objects:
   217 ;;		On entry : 0/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   221 ;;      Params:         2       0       0       0       0       0       0       0       0
   222 ;;      Locals:         0       0       0       0       0       0       0       0       0
   223 ;;      Temps:          2       0       0       0       0       0       0       0       0
   224 ;;      Totals:         4       0       0       0       0       0       0       0       0
   225 ;;Total ram usage:        4 bytes
   226 ;; Hardware stack levels used:    1
   227 ;; This function calls:
   228 ;;		Nothing
   229 ;; This function is called by:
   230 ;;		_main
   231 ;; This function uses a non-reentrant model
   232 ;;
   233                           
   234                           	psect	text1
   235  007F4A                     __ptext1:
   236                           	opt stack 0
   237  007F4A                     _displayNum:
   238                           	opt stack 30
   239                           
   240                           ;main.c: 6: switch(n)
   241                           
   242                           ;incstack = 0
   243  007F4A  D032               	goto	l638
   244  007F4C                     l616:
   245                           
   246                           ;main.c: 9: TRISB = 0b00000000;
   247  007F4C  0E00               	movlw	0
   248  007F4E  6E93               	movwf	3987,c	;volatile
   249                           
   250                           ;main.c: 10: TRISC = 0b00000001;
   251  007F50  0E01               	movlw	1
   252  007F52  6E94               	movwf	3988,c	;volatile
   253                           
   254                           ;main.c: 11: break;
   255  007F54  0012               	return	
   256  007F56                     l618:
   257                           
   258                           ;main.c: 13: TRISB = 0b00111001;
   259  007F56  0E39               	movlw	57
   260  007F58  6E93               	movwf	3987,c	;volatile
   261                           
   262                           ;main.c: 14: TRISC = 0b00000001;
   263  007F5A  0E01               	movlw	1
   264  007F5C  6E94               	movwf	3988,c	;volatile
   265                           
   266                           ;main.c: 15: break;
   267  007F5E  0012               	return	
   268  007F60                     l620:
   269                           
   270                           ;main.c: 17: TRISB = 0b00100100;
   271  007F60  0E24               	movlw	36
   272  007F62  6E93               	movwf	3987,c	;volatile
   273                           
   274                           ;main.c: 18: TRISC = 0b00000000;
   275  007F64  0E00               	movlw	0
   276  007F66  6E94               	movwf	3988,c	;volatile
   277                           
   278                           ;main.c: 19: break;
   279  007F68  0012               	return	
   280  007F6A                     l622:
   281                           
   282                           ;main.c: 21: TRISB = 0b00110000;
   283  007F6A  0E30               	movlw	48
   284  007F6C  6E93               	movwf	3987,c	;volatile
   285                           
   286                           ;main.c: 22: TRISC = 0b00000000;
   287  007F6E  0E00               	movlw	0
   288  007F70  6E94               	movwf	3988,c	;volatile
   289                           
   290                           ;main.c: 23: break;
   291  007F72  0012               	return	
   292  007F74                     l624:
   293                           
   294                           ;main.c: 25: TRISB = 0b00011001;
   295  007F74  0E19               	movlw	25
   296  007F76  6E93               	movwf	3987,c	;volatile
   297                           
   298                           ;main.c: 26: TRISC = 0b00000000;
   299  007F78  0E00               	movlw	0
   300  007F7A  6E94               	movwf	3988,c	;volatile
   301                           
   302                           ;main.c: 27: break;
   303  007F7C  0012               	return	
   304  007F7E                     l626:
   305                           
   306                           ;main.c: 29: TRISB = 0b00010010;
   307  007F7E  0E12               	movlw	18
   308  007F80  6E93               	movwf	3987,c	;volatile
   309                           
   310                           ;main.c: 30: TRISC = 0b00000000;
   311  007F82  0E00               	movlw	0
   312  007F84  6E94               	movwf	3988,c	;volatile
   313                           
   314                           ;main.c: 31: break;
   315  007F86  0012               	return	
   316  007F88                     l628:
   317                           
   318                           ;main.c: 33: TRISB = 0b00000010;
   319  007F88  0E02               	movlw	2
   320  007F8A  6E93               	movwf	3987,c	;volatile
   321                           
   322                           ;main.c: 34: TRISC = 0b00000000;
   323  007F8C  0E00               	movlw	0
   324  007F8E  6E94               	movwf	3988,c	;volatile
   325                           
   326                           ;main.c: 35: break;
   327  007F90  0012               	return	
   328  007F92                     l630:
   329                           
   330                           ;main.c: 37: TRISB = 0b00111000;
   331  007F92  0E38               	movlw	56
   332  007F94  6E93               	movwf	3987,c	;volatile
   333                           
   334                           ;main.c: 38: TRISC = 0b00000001;
   335  007F96  0E01               	movlw	1
   336  007F98  6E94               	movwf	3988,c	;volatile
   337                           
   338                           ;main.c: 39: break;
   339  007F9A  0012               	return	
   340  007F9C                     l632:
   341                           
   342                           ;main.c: 41: TRISB = 0b00000000;
   343  007F9C  0E00               	movlw	0
   344  007F9E  6E93               	movwf	3987,c	;volatile
   345                           
   346                           ;main.c: 42: TRISC = 0b00000000;
   347  007FA0  0E00               	movlw	0
   348  007FA2  6E94               	movwf	3988,c	;volatile
   349                           
   350                           ;main.c: 43: break;
   351  007FA4  0012               	return	
   352  007FA6                     l634:
   353                           
   354                           ;main.c: 45: TRISB = 0b00010000;
   355  007FA6  0E10               	movlw	16
   356  007FA8  6E93               	movwf	3987,c	;volatile
   357                           
   358                           ;main.c: 46: TRISC = 0b00000000;
   359  007FAA  0E00               	movlw	0
   360  007FAC  6E94               	movwf	3988,c	;volatile
   361                           
   362                           ;main.c: 47: break;
   363  007FAE  0012               	return	
   364  007FB0                     l638:
   365  007FB0  C001  F003         	movff	displayNum@n,??_displayNum
   366  007FB4  C002  F004         	movff	displayNum@n+1,??_displayNum+1
   367                           
   368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   369                           ; Switch size 1, requested type "space"
   370                           ; Number of cases is 1, Range of values is 0 to 0
   371                           ; switch strategies available:
   372                           ; Name         Instructions Cycles
   373                           ; simple_byte            4     3 (average)
   374                           ;	Chosen strategy is simple_byte
   375  007FB8  5004               	movf	??_displayNum+1,w,c
   376  007FBA  0A00               	xorlw	0	; case 0
   377  007FBC  A4D8               	btfss	status,2,c
   378  007FBE  0012               	return	
   379                           
   380                           ; Switch size 1, requested type "space"
   381                           ; Number of cases is 10, Range of values is 0 to 9
   382                           ; switch strategies available:
   383                           ; Name         Instructions Cycles
   384                           ; simple_byte           31    16 (average)
   385                           ;	Chosen strategy is simple_byte
   386  007FC0  5003               	movf	??_displayNum,w,c
   387  007FC2  0A00               	xorlw	0	; case 0
   388  007FC4  B4D8               	btfsc	status,2,c
   389  007FC6  D7C2               	goto	l616
   390  007FC8  0A01               	xorlw	1	; case 1
   391  007FCA  B4D8               	btfsc	status,2,c
   392  007FCC  D7C4               	goto	l618
   393  007FCE  0A03               	xorlw	3	; case 2
   394  007FD0  B4D8               	btfsc	status,2,c
   395  007FD2  D7C6               	goto	l620
   396  007FD4  0A01               	xorlw	1	; case 3
   397  007FD6  B4D8               	btfsc	status,2,c
   398  007FD8  D7C8               	goto	l622
   399  007FDA  0A07               	xorlw	7	; case 4
   400  007FDC  B4D8               	btfsc	status,2,c
   401  007FDE  D7CA               	goto	l624
   402  007FE0  0A01               	xorlw	1	; case 5
   403  007FE2  B4D8               	btfsc	status,2,c
   404  007FE4  D7CC               	goto	l626
   405  007FE6  0A03               	xorlw	3	; case 6
   406  007FE8  B4D8               	btfsc	status,2,c
   407  007FEA  D7CE               	goto	l628
   408  007FEC  0A01               	xorlw	1	; case 7
   409  007FEE  B4D8               	btfsc	status,2,c
   410  007FF0  D7D0               	goto	l630
   411  007FF2  0A0F               	xorlw	15	; case 8
   412  007FF4  B4D8               	btfsc	status,2,c
   413  007FF6  D7D2               	goto	l632
   414  007FF8  0A01               	xorlw	1	; case 9
   415  007FFA  A4D8               	btfss	status,2,c
   416  007FFC  0012               	return	
   417  007FFE  D7D3               	goto	l634
   418  008000                     __end_of_displayNum:
   419                           	opt stack 0
   420  0000                     tblptru	equ	0xFF8
   421                           wreg	equ	0xFE8
   422                           status	equ	0xFD8
   423                           tblptru	equ	0xFF8
   424                           wreg	equ	0xFE8
   425                           status	equ	0xFD8
   426                           
   427                           	psect	rparam
   428  0000                     tblptru	equ	0xFF8
   429                           wreg	equ	0xFE8
   430                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_displayNum

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     139
                                              4 COMRAM     7     7      0
                         _displayNum
 ---------------------------------------------------------------------------------
 (1) _displayNum                                           4     2      2      49
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayNum

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Aug 31 11:39:37 2015

                     u67 7F1C                      l620 7F60                      l630 7F92  
                    l622 7F6A                      l632 7F9C                      l624 7F74  
                    l616 7F4C                      l634 7FA6                      l626 7F7E  
                    l618 7F56                      l628 7F88                      l638 7FB0  
                    l670 7F32                      l648 7EDA                      l672 7F36  
                    l666 7F2C                      wreg 000FE8                     _main 7EC8  
            displayNum@n 0001                     start 2000                    ?_main 0001  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISB 000F93  
                  _TRISC 000F94                    main@i 000A                    main@l 0006  
                  main@x 0008                    status 000FD8          __initialization 7EBE  
           __end_of_main 7F4A                   ??_main 0005            __activetblptr 000002  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7EBE  
         __pcstackCOMRAM 0001               _displayNum 7F4A                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EBE                  __ramtop 0800  
                __ptext0 7EC8                  __ptext1 7F4A     end_of_initialization 7EBE  
          __Lmediumconst 0000              ?_displayNum 0001      start_initialization 7EBE  
    __size_of_displayNum 00B6             ??_displayNum 0003                 __Hrparam 0000  
               __Lrparam 0000       __end_of_displayNum 8000            __size_of_main 0082  
